# =============== vi & vim {https://ru.wikibooks.org/wiki/Vim} =================

                # Визуальный режим   ... 33
                # Режим вставки      ... 48
                # Обычный режим      ... 86
                # Метки              ... 146
                # Регистры           ... 151
                # Макросы            ... 168
                # Поиск              ... 178
                # Командный режим    ... 209
                # Работа с буфером   ... 248
                # Переходы           ... 268
                # Правописание       ... 274
                # Работа с вкладками ... 288
				

:e[dit] | :e!                   # открыть файл | вернуть в исходное состояние
vim -R | view                   # открыть файл для чтения
vim -u NONE -N                  # загрузить vim без настроек в .vimrc
vim -u code/essential.vim       # загрузить vim с указанием файла настроек
vim +n                          # открыть файл на n-строке
vim +                           # открыть файл на последней строке
vim +/search                    # открыть файл на первом вхождении
vim -r file                     # восстановить редактируемый буфер файла
:e ++enc=cp1251                 # смена кодировки
:w ++enc=utf-8                  # сохранение в кодировке
:r !echo %<Tab>                 # вставить текущий путь файла
:!python %                      # выполнить текущую программу на python

                h - left | j - down | k - up | l - right
gj                              # вниз на экранную строку
j$ 				                # перейти в конец следующей строки
J 				                # объединяет текущую строку со следующей

# ========================= Визуальный режим ===================================

v | V                           # визуальный режим | работа со строками (switch)
<C-v>   				        # блочный визуальный реж.(switch) 
e | b                           # выделить слово вперед | назад
o                               # перемещает в конец выделенного текста
c                               # перейти в режим замены
ap                              # выбор параграфа
aw                              # выбор слова
gv                              # повторно выделяет визуальное выделение
>.	                            # отступ с повтором
vi}                             # выделить текст в {}
vit	                            # выделить текст в теге
gUit                            # изменить регистр текста в теге

# ========================= сочетания клавиш ===================================
# в визуальном режиме
<C-g>                           # переключение между реж. визуальным и выделения
<C-[>                           # перейти в командный режим

# в командном режиме
<C-g>                           # количество строк в файле
<C-d>                           # посмотреть список возможных команд
ga 				                # определить код символа
<C-a> 	                        # сложение чисел 5<C-a>
<C-x> 	                        # вычитание чисел 5<C-x>
<C-^>                           # переключения между буферами
<C-r>                           # повторить действие

# в режиме вставки
<C-e> | <C-y>                   # прокрутить вниз | вверх
<C-b> | <C-f>                   # на один экран назад | вперед
<C-p> | <C-в>                   # Автодополнение текста
<C-x><C-n>						# дополнение по ключевым словам
<C-x><C-i>						# дополнение по словам в файле
<C-x><C-]>						# дополнение по словам в индексном файле tags
<C-x><C-k>						# дополнение по словарю
<C-x><C-l>						# дополнение целой строки
<C-x><C-f>						# дополнение имени файла
<C-x><C-o>						# Контекстное авто-ние (omni-completion)
<C-x>s							# в режиме вставки исправление орфо ошибок
<C-o> | <C-i>                   # вернуть курсор на прежнее место |к след. месту
<C-h> 				            # удалить символ
<C-w>				            # удалить слово
<C-u>				            # удалить текст до начала строки
<C-o> 				            # командный под режим
<C-r>=				            # регистр выражений
<C-r>+                          # вставить из буфера
<C-v>{code} 			        # вставить спец. символы
<C-v>u{code} 			        # вставить спец. символы юникода
<C-k>{char1}{char2} 		    # вставить спец. символы диграф :h digraph-table
<C-o> | <C-i>                   # переключение между файлами вперед | назад

# ========================= Обычный режим ======================================
ESC | Ctrl-[        
i | I & ^i                      # перейти в режим ред. | в начало строки
a | A & a$                      # перейти в режим ред. | в конец строки
o & A<CR> | O & ko              # новая строка и режим ред. ниже | выше
w | W                           # на слово вперед
e | E                           # на конец слова 
b | B                           # на слово назад
} | {                           # на абзац вперед | назад
) | (                           # на предложение вперед | назад
[[ | ]]                         # на начало текущего раздела | на конец

c$ | С                          # замена от символа до конца строки
ciw                             # замена слова
s | cl                          # замена одного символа
S | ^C & cc                    	# замена строки 
r | R                           # замена символа | режим замены
xp                              # поменять символы местами 

^ | 0                           # в начало строки
$                               # в конец строки
+ | -                           # на первый символ след. стр. | пред. стр.
>2G | >G                        # отступ строки | до конца файла
gg | G | 42G                    # в начало документа | в конец | на строку 42 
H | <C-u                        # на первую строку экрана
M                               # на среднюю строку экрана
L | <C-d                        # на последнюю строку экрана
x | X                           # удалить символ | backspace
u | U                           # отменить последнее действие

yy | Y                          # копировать строку
yw                              # скопировать слово
yl | 2yl 			            # скопировать 2 символа 
yap                             # скопировать абзац
p                               # вставить строку из буфера ниже строки
P                               # вставить строку из буфера выше строки
5yy                             # копировать 5 строк
y$                              # копировать от текущего символа до конца стр.
y^                              # копировать от текущего символа до начала стр.
yG                              # копировать от текущей строки до конца файла
y20G                            # копировать от текущей стр. до 20-й стр. файла

dl | <C-h>                      # вырезать символ
dw | <C-w>                      # вырезать слово
daw	                            # вырезать слово с конца
de                              # вырезать слово без пробела
dd                              # вырезать строку
d/ge                            # вырезать до вхождения
5dd                             # вырезать 5 строк
d$ | D                          # вырезать от текущего символа до конца строки
d0 | d^ | <C-u>                 # вырезать от текущего символа до начала строки
dG                              # вырезать от текущей строки до конца файла
d20G                            # вырезать от текущей стр. до 20-й стр. файла

~                               # смена регистра символа
gUaw 				            # смена регистра слова
gUU | guu			            # смена регистра строки на верхний | на нижний 
.                               # повторить последнее действие
fh                              # переместится на букву 'h' в строке

# ============================ Метки ===========================================
ma                              # создание локальной метки 'a'
mA                              # создание глобальной метки 'A'
'a                              # вернуться к закладке 'a'

# =========================== Регистры =========================================
"ayy                            # скопировать строку с регистром 'a'
"Ayy                            # скопировать строку добавив к регистру 'a'
"bd ('d'elete)                  # вырезать в регистр 'b'
"ap ('p'aste)                   # вставить из регистра 'a'
"_dd                            # удалить строку не используя регистра
""dd                            # вырезать в явно не именованный регистр
"ayiw                           # захватить текущее слово
"0P                             # вставить текст из регистра захвата
"+                              # системный буфер обмена
"*                              # первичный буфер обмена ср. кн. мыши
"%                              # Имя текущего файла
"#                              # Имя альтернативного файла
".                              # Последний вставленный текст
":                              # Последняя команда Ex
"/                              # Последний шаблон поиска

# =========================== Макросы ==========================================
qa                              # Начало записи макроса
qA                              # добавить в конец макроса a
q                               # Остановка записи макроса
:reg a                          # посмотреть содержимое макроса a
@a                              # выполнить макрос a
@@                              # выполнить последний вызванный макрос
:put a                          # Вставка макроса в документ
"ay$                            # Копирование макроса обратно в регистр

# =========================== Поиск ============================================
;                               # повторяет последний поиск
,                               # последний поиск в обратном направлении
/                               # поиск
/\<word\>                       # искать слово
\c | \C                         # выкл. | вкл. чувствительность к регистру
\v                              # вкл. все символы спец кроме _ aA 09 
\x                              # вкл. симв. класс шестнадцатеричных цифр
            #\([0-9a-fA-F]\{6}\|[0-9a-fA-F]\{3}\)
            \v#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})
            \v#(\x{6}|\x{3})
\V                              # режим точного совпадения
/\5                             # искать цифру
/\5\+ | /\5\*                   # искать одну и более |
/lang/e<CR>                     # поместить курсор в конец совпадения 
n | N                           # перейти к следующему вхождению | к предыдущему 
:5,10!sort                      # сортировать строки в файле

:%s/word//gn                    # количество совпадений
:50,100s/lnie/line/g            # поиск и замена с 50 по 100 стр.
:%s/lnie/line/gc                # поиск и замена (y/n/a/q/l/^E/^Y)
    %                           # диапазон строк от начала до конца
    s                           # операция подстановки поиск с заменой
    /lnie/line/                 # шаблон поиска и замены
    g - глобально c             # запрашивать подтверждение
        y                       # выполнить замену
        n                       # пропустить замену
        a                       # замена всех вхождений
        q | ESC                 # завершить операцию
        l                       # выполнить замену и завершить

# ==================== Командный EX режим ======================================

<Tab> | <C-n> | <Right>         # перемещение по подсказкам вперед
<S-Tab> | <C-p> | <Left>        # перемещение по подсказкам назад
:p[rint] | :%p                  # вывести строки | | вывести весь документ
:copy | :t                      # скопировать строки
:[range]move{address}
:'<,'>normal.                   # для каждой стр. виз. выд. выполнить команду .
:%normal A;                     # добавить ; для каждой строки в файле
:registers                      # просмотр содержимого всех регистров
:set incsearch                  # расширенный поиск
:set ignorecase                 # игнорировать регистр
:set smartcase                  # отм. ignorecase если в шаблоне есть верх. рег.

:syntax on                      # включает подсветку синтаксиса
:set number                     # включить отображение номеров строк
:set nonumber                   # отключить отображение номеров строк

:set textwidth=80               # ширина строки
:set wrapmargin                 # автоматический перенос

:let g:auto_save = 1            # автоматическое сохранение
:let g:auto_save_silent = 1     # не показывать уведомление о авто сохранении

:set tabstop=4                  # количество пробелов отображается в тексте
:set shiftwidth=4               # ширины отступов в пробелах >> и <<
:set softtabstop=4              # количество пробелов, при доб. удал. tab
:set smarttab                   # добавление отступа равному shiftwidth
:set expandtab                  # заменяет символ табуляции на пробелов >> и <<
:set nrformats=                 # расчеты в десятичном формате
:set keymap=russian-jcukenwin   # 
:set iminserd=0
:set laststatus=2               # показывать строку состояния
:set fileformat=unix			# преобразует файл в формат unix
gwap                            # переформатировать абзац
:center                         # разместить текст по центру
:left
:right
:set list | :l                  # показать скрытые символы

# ==================== Работа с буфером ========================================
:ls[!] :files[!] :buffers[!]    # список буферов
:new                            # создать новый буфер
:badd file						# добавляет file в список буферов
:bunload						# выгружает буфер из памяти
:bdelete						# удаляет буфер из памяти
:unhide | :sunhide				# редактировать все буферы | в новом окне
:bufdo cmd						# выполнить команду в каждом буфере
:split file2					# открыть файл в новом буфере 
:vsp[lit] | file                # разделить на 2 окна по вер. и открыть файл
:sp[lit] | file                 # разделить на 2 окна по гор. и открыть файл
:buffers 2                      # вывести список редактируемых файлов
:bp[revious] | :sbp[revious]    # перекл-ся на предыдущий | в новом окне
:bn[ext] | :sbn[ext]			# перекл-ся на следующий | в новом окне
:bf[irst] | :bl[ast]            # перекл-ся на первый буфер | на последний
:b[uffer] | :sb n               # перекл-ся на буфер | в новом окне
:bmod | :sbmod					# перекл-ся на n измененный буфер | в новом окне
:bd[elete] n                    # удалить буфер по его номеру
:n                              # переключение на следующий файл
:N                              # переключение на предыдущий файл
:o[pen]                         # открыть еще один файл в буфер
q:                              # открыто историю команд
:qa[ll]                         # закрыть все буферы
:wa[ll]                         # сохранить все буферы
:undolist
:undo 5

# ============ переходы и список изменений =====================================
:jumps                          # список переходов
:changes                        # список изменений
g; | g,                         # переключение по списку изменений
gf                              # переход к файлу по ссылке

# ============ правописание  $VIMRUNTIME/spell/ ================================
:set spell
:set spelllang=ru
:setlocal spell spelllang=en_us # Для включения проверки орфографии
:spellrepall                    # сделать эту замену во всем тексте
[s | ]s 						# перемещение по найденным орфо ошибкам
z=								# варианты исправления слов
zg								# добавить текущее слово в словарь
zw								# удалить текущее слово из словаря
zug								# отменяет команду zg zw
<C-x>s							# в режиме вставки исправление орфо ошибок

setlocal spell le+=~/books/practical_vim/jargon.utf-8.add

set nocompatible
plugin on

# =========================== работа с вкладками ===============================
vim -o file1 file2              # открытие в нескольких вкладках
:windo cmd						# выполнить команду в каждом окне
<C-w> w | h | j | k | l         # переключение между окнами
<C-w>s                          # разделение на 2 окна по гор.
<C-w>v                          # разделение на 2 окна по вер. 
<C-w>_ | n<C-w>_                # увеличить высоту окна max | n-в строках
<C-w>=                          # выровнять окна
<C-w>-							# уменьшает размер окна по высоте	
<C-w>+							# увеличивает размер окна по высоте	
:resize +n | -n					# уменьшает | увеличивает высоту окна
<C-w><							# уменьшает размер окна по ширине	
<C-w>>							# увеличивает размер окна по ширине	

<C-w>| | n<C-w>|                # увеличить ширину окна max | n-в столбцах
<C-w>r                          # поменять окна местами
<C-w>K                          # сделать текущее окно верхним
<C-w>c | :cl[ose]               # закрыть текущее окно
<C-w>o | :on[ly]                # закрыть все окна кроме текущего
:tabnew                         # новая вкладка
:tabn[ext] {n} | {n}gt          # переключение между вкладками вперед 
:tabp[revious] | gT             # переключение между вкладками назад    
<C-w>T                          # переместить текущее окно в новую вкладку
:tabmove 0                      # поменять текущую вкладку с первой местами
:tabe[dit]                      # открыть новую вкладку
:tabc[lose]                     # закрыть вкладку
:tabo[nly]                      # закрыть все вкладки кроме текущей
:r[ead] file.txt                # вставить содержание файла в текущий файл
:w[rite] | :w filename          # сохранить файл на диске | другое имя
:wq | ZZ                        # выход с сохранением файла 
:q[uit] | :q!                   # выход | без сохранения файла

# =========================== edit 1-07-2017 ==================================

